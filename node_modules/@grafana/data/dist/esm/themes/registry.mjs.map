{"version":3,"file":"registry.mjs","sources":["../../../src/themes/registry.ts"],"sourcesContent":["import { Registry, RegistryItem } from '../utils/Registry';\n\nimport { createTheme } from './createTheme';\nimport * as extraThemes from './themeDefinitions';\nimport { GrafanaTheme2 } from './types';\n\nexport interface ThemeRegistryItem extends RegistryItem {\n  isExtra?: boolean;\n  build: () => GrafanaTheme2;\n}\n\n/**\n * @internal\n * Only for internal use, never use this from a plugin\n **/\nexport function getThemeById(id: string): GrafanaTheme2 {\n  const theme = themeRegistry.getIfExists(id) ?? themeRegistry.get('dark');\n  return theme.build();\n}\n\n/**\n * @internal\n * For internal use only\n */\nexport function getBuiltInThemes(allowedExtras: string[]) {\n  const themes = themeRegistry.list().filter((item) => {\n    if (item.isExtra) {\n      return allowedExtras.includes(item.id);\n    }\n    return true;\n  });\n  // sort themes alphabetically, but put built-in themes (default, dark, light, system) first\n  const sortedThemes = themes.sort((a, b) => {\n    if (a.isExtra && !b.isExtra) {\n      return 1;\n    } else if (!a.isExtra && b.isExtra) {\n      return -1;\n    } else {\n      return a.name.localeCompare(b.name);\n    }\n  });\n  return sortedThemes;\n}\n\n/**\n * There is also a backend list at pkg/services/preference/themes.go\n */\nconst themeRegistry = new Registry<ThemeRegistryItem>(() => {\n  return [\n    { id: 'system', name: 'System preference', build: getSystemPreferenceTheme },\n    { id: 'dark', name: 'Dark', build: () => createTheme({ colors: { mode: 'dark' } }) },\n    { id: 'light', name: 'Light', build: () => createTheme({ colors: { mode: 'light' } }) },\n  ];\n});\n\nfor (const [id, theme] of Object.entries(extraThemes)) {\n  themeRegistry.register({\n    id,\n    name: theme.name ?? '',\n    build: () => createTheme(theme),\n    isExtra: true,\n  });\n}\n\nfunction getSystemPreferenceTheme() {\n  const mediaResult = window.matchMedia('(prefers-color-scheme: dark)');\n  const id = mediaResult.matches ? 'dark' : 'light';\n  return getThemeById(id);\n}\n"],"names":["_a","extraThemes"],"mappings":";;;;AAAA,IAAA,EAAA;AAeO,SAAS,aAAa,EAA2B,EAAA;AAfxD,EAAAA,IAAAA,GAAAA;AAgBE,EAAM,MAAA,KAAA,GAAA,CAAQA,GAAA,GAAA,aAAA,CAAc,WAAY,CAAA,EAAE,MAA5B,IAAAA,GAAAA,GAAAA,GAAiC,aAAc,CAAA,GAAA,CAAI,MAAM,CAAA;AACvE,EAAA,OAAO,MAAM,KAAM,EAAA;AACrB;AAMO,SAAS,iBAAiB,aAAyB,EAAA;AACxD,EAAA,MAAM,SAAS,aAAc,CAAA,IAAA,EAAO,CAAA,MAAA,CAAO,CAAC,IAAS,KAAA;AACnD,IAAA,IAAI,KAAK,OAAS,EAAA;AAChB,MAAO,OAAA,aAAA,CAAc,QAAS,CAAA,IAAA,CAAK,EAAE,CAAA;AAAA;AAEvC,IAAO,OAAA,IAAA;AAAA,GACR,CAAA;AAED,EAAA,MAAM,YAAe,GAAA,MAAA,CAAO,IAAK,CAAA,CAAC,GAAG,CAAM,KAAA;AACzC,IAAA,IAAI,CAAE,CAAA,OAAA,IAAW,CAAC,CAAA,CAAE,OAAS,EAAA;AAC3B,MAAO,OAAA,CAAA;AAAA,KACE,MAAA,IAAA,CAAC,CAAE,CAAA,OAAA,IAAW,EAAE,OAAS,EAAA;AAClC,MAAO,OAAA,EAAA;AAAA,KACF,MAAA;AACL,MAAA,OAAO,CAAE,CAAA,IAAA,CAAK,aAAc,CAAA,CAAA,CAAE,IAAI,CAAA;AAAA;AACpC,GACD,CAAA;AACD,EAAO,OAAA,YAAA;AACT;AAKA,MAAM,aAAA,GAAgB,IAAI,QAAA,CAA4B,MAAM;AAC1D,EAAO,OAAA;AAAA,IACL,EAAE,EAAI,EAAA,QAAA,EAAU,IAAM,EAAA,mBAAA,EAAqB,OAAO,wBAAyB,EAAA;AAAA,IAC3E,EAAE,EAAA,EAAI,MAAQ,EAAA,IAAA,EAAM,QAAQ,KAAO,EAAA,MAAM,WAAY,CAAA,EAAE,QAAQ,EAAE,IAAA,EAAM,MAAO,EAAA,EAAG,CAAE,EAAA;AAAA,IACnF,EAAE,EAAA,EAAI,OAAS,EAAA,IAAA,EAAM,SAAS,KAAO,EAAA,MAAM,WAAY,CAAA,EAAE,QAAQ,EAAE,IAAA,EAAM,OAAQ,EAAA,EAAG,CAAE;AAAA,GACxF;AACF,CAAC,CAAA;AAED,KAAA,MAAW,CAAC,EAAI,EAAA,KAAK,KAAK,MAAO,CAAA,OAAA,CAAQC,KAAW,CAAG,EAAA;AACrD,EAAA,aAAA,CAAc,QAAS,CAAA;AAAA,IACrB,EAAA;AAAA,IACA,IAAA,EAAA,CAAM,EAAM,GAAA,KAAA,CAAA,IAAA,KAAN,IAAc,GAAA,EAAA,GAAA,EAAA;AAAA,IACpB,KAAA,EAAO,MAAM,WAAA,CAAY,KAAK,CAAA;AAAA,IAC9B,OAAS,EAAA;AAAA,GACV,CAAA;AACH;AAEA,SAAS,wBAA2B,GAAA;AAClC,EAAM,MAAA,WAAA,GAAc,MAAO,CAAA,UAAA,CAAW,8BAA8B,CAAA;AACpE,EAAM,MAAA,EAAA,GAAK,WAAY,CAAA,OAAA,GAAU,MAAS,GAAA,OAAA;AAC1C,EAAA,OAAO,aAAa,EAAE,CAAA;AACxB;;;;"}