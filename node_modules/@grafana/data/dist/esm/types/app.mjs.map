{"version":3,"file":"app.mjs","sources":["../../../src/types/app.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { KeyValue } from './data';\nimport { NavModel } from './navModel';\nimport { PluginMeta, GrafanaPlugin, PluginIncludeType } from './plugin';\nimport {\n  type PluginExtensionLinkConfig,\n  PluginExtensionComponentConfig,\n  PluginExtensionExposedComponentConfig,\n  PluginExtensionAddedComponentConfig,\n  PluginExtensionAddedLinkConfig,\n  PluginExtensionAddedFunctionConfig,\n} from './pluginExtensions';\n\n/**\n * @public\n * The app container that is loading another plugin (panel or query editor)\n * */\nexport enum CoreApp {\n  CloudAlerting = 'cloud-alerting',\n  UnifiedAlerting = 'unified-alerting',\n  Dashboard = 'dashboard',\n  Explore = 'explore',\n  Correlations = 'correlations',\n  Unknown = 'unknown',\n  PanelEditor = 'panel-editor',\n  PanelViewer = 'panel-viewer',\n}\n\nexport interface AppRootProps<T extends KeyValue = KeyValue> {\n  meta: AppPluginMeta<T>;\n  /**\n   * base URL segment for an app, /app/pluginId\n   */\n  basename: string; // The URL path to this page\n\n  /**\n   * Pass the nav model to the container... is there a better way?\n   * @deprecated Use PluginPage component exported from @grafana/runtime instead\n   */\n  onNavChanged: (nav: NavModel) => void;\n\n  /**\n   * The URL query parameters\n   * @deprecated Use react-router instead\n   */\n  query: KeyValue;\n\n  /**\n   * The URL path to this page\n   * @deprecated Use react-router instead\n   */\n  path: string;\n}\n\nexport interface AppPluginMeta<T extends KeyValue = KeyValue> extends PluginMeta<T> {\n  // TODO anything specific to apps?\n}\n\nexport class AppPlugin<T extends KeyValue = KeyValue> extends GrafanaPlugin<AppPluginMeta<T>> {\n  private _exposedComponentConfigs: PluginExtensionExposedComponentConfig[] = [];\n  private _addedComponentConfigs: PluginExtensionAddedComponentConfig[] = [];\n  private _addedLinkConfigs: PluginExtensionAddedLinkConfig[] = [];\n  private _addedFunctionConfigs: PluginExtensionAddedFunctionConfig[] = [];\n\n  // Content under: /a/${plugin-id}/*\n  root?: ComponentType<AppRootProps<T>>;\n\n  /**\n   * Called after the module has loaded, and before the app is used.\n   * This function may be called multiple times on the same instance.\n   * The first time, `this.meta` will be undefined\n   */\n  init(meta: AppPluginMeta<T>) {}\n\n  /**\n   * Set the component displayed under:\n   *   /a/${plugin-id}/*\n   *\n   * If the NavModel is configured, the page will have a managed frame, otheriwse it has full control.\n   */\n  setRootPage(root: ComponentType<AppRootProps<T>>) {\n    this.root = root;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: System.Module) {\n    if (pluginExports.ConfigCtrl) {\n      this.angularConfigCtrl = pluginExports.ConfigCtrl;\n    }\n\n    if (this.meta && this.meta.includes) {\n      for (const include of this.meta.includes) {\n        if (include.type === PluginIncludeType.page && include.component) {\n          const exp = pluginExports[include.component];\n\n          if (!exp) {\n            console.warn('App Page uses unknown component: ', include.component, this.meta);\n            continue;\n          }\n        }\n      }\n    }\n  }\n\n  get exposedComponentConfigs() {\n    return this._exposedComponentConfigs;\n  }\n\n  get addedComponentConfigs() {\n    return this._addedComponentConfigs;\n  }\n\n  get addedLinkConfigs() {\n    return this._addedLinkConfigs;\n  }\n\n  get addedFunctionConfigs() {\n    return this._addedFunctionConfigs;\n  }\n\n  addLink<Context extends object>(linkConfig: PluginExtensionAddedLinkConfig<Context>) {\n    this._addedLinkConfigs.push(linkConfig as PluginExtensionAddedLinkConfig);\n\n    return this;\n  }\n\n  addComponent<Props = {}>(addedComponentConfig: PluginExtensionAddedComponentConfig<Props>) {\n    this._addedComponentConfigs.push(addedComponentConfig as PluginExtensionAddedComponentConfig);\n\n    return this;\n  }\n\n  addFunction<Signature>(addedFunctionConfig: PluginExtensionAddedFunctionConfig<Signature>) {\n    this._addedFunctionConfigs.push(addedFunctionConfig);\n\n    return this;\n  }\n\n  exposeComponent<Props = {}>(componentConfig: PluginExtensionExposedComponentConfig<Props>) {\n    this._exposedComponentConfigs.push(componentConfig as PluginExtensionExposedComponentConfig);\n\n    return this;\n  }\n\n  /** @deprecated Use .addLink() instead */\n  configureExtensionLink<Context extends object>(extension: Omit<PluginExtensionLinkConfig<Context>, 'type'>) {\n    this.addLink({\n      targets: [extension.extensionPointId],\n      ...extension,\n    });\n\n    return this;\n  }\n  /** @deprecated Use .addComponent() instead */\n  configureExtensionComponent<Props = {}>(extension: Omit<PluginExtensionComponentConfig<Props>, 'type'>) {\n    this.addComponent({\n      targets: [extension.extensionPointId],\n      ...extension,\n      component: extension.component,\n    });\n\n    return this;\n  }\n}\n\n/**\n * Defines life cycle of a feature\n * @internal\n */\nexport enum FeatureState {\n  /** @deprecated in favor of experimental */\n  alpha = 'alpha',\n  /** @deprecated in favor of preview */\n  beta = 'beta',\n  /** used to mark experimental features with high/unknown risk */\n  experimental = 'experimental',\n  /** used to mark features that are in public preview with medium/hight risk */\n  privatePreview = 'private preview',\n  /** used to mark features that are in public preview with low/medium risk, or as a shared badge for public and private previews */\n  preview = 'preview',\n  /** used to mark new GA features */\n  new = 'new',\n}\n"],"names":["CoreApp","FeatureState"],"mappings":";;AAkBY,IAAA,OAAA,qBAAAA,QAAL,KAAA;AACL,EAAAA,SAAA,eAAgB,CAAA,GAAA,gBAAA;AAChB,EAAAA,SAAA,iBAAkB,CAAA,GAAA,kBAAA;AAClB,EAAAA,SAAA,WAAY,CAAA,GAAA,WAAA;AACZ,EAAAA,SAAA,SAAU,CAAA,GAAA,SAAA;AACV,EAAAA,SAAA,cAAe,CAAA,GAAA,cAAA;AACf,EAAAA,SAAA,SAAU,CAAA,GAAA,SAAA;AACV,EAAAA,SAAA,aAAc,CAAA,GAAA,cAAA;AACd,EAAAA,SAAA,aAAc,CAAA,GAAA,cAAA;AARJ,EAAAA,OAAAA,QAAAA;AAAA,CAAA,EAAA,OAAA,IAAA,EAAA;AAyCL,MAAM,kBAAiD,aAAgC,CAAA;AAAA,EAAvF,WAAA,GAAA;AAAA,IAAA,KAAA,CAAA,GAAA,SAAA,CAAA;AACL,IAAA,IAAA,CAAQ,2BAAoE,EAAC;AAC7E,IAAA,IAAA,CAAQ,yBAAgE,EAAC;AACzE,IAAA,IAAA,CAAQ,oBAAsD,EAAC;AAC/D,IAAA,IAAA,CAAQ,wBAA8D,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUvE,KAAK,IAAwB,EAAA;AAAA;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9B,YAAY,IAAsC,EAAA;AAChD,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA;AACZ,IAAO,OAAA,IAAA;AAAA;AACT,EAEA,+BAA+B,aAA8B,EAAA;AAC3D,IAAA,IAAI,cAAc,UAAY,EAAA;AAC5B,MAAA,IAAA,CAAK,oBAAoB,aAAc,CAAA,UAAA;AAAA;AAGzC,IAAA,IAAI,IAAK,CAAA,IAAA,IAAQ,IAAK,CAAA,IAAA,CAAK,QAAU,EAAA;AACnC,MAAW,KAAA,MAAA,OAAA,IAAW,IAAK,CAAA,IAAA,CAAK,QAAU,EAAA;AACxC,QAAA,IAAI,OAAQ,CAAA,IAAA,KAAS,iBAAkB,CAAA,IAAA,IAAQ,QAAQ,SAAW,EAAA;AAChE,UAAM,MAAA,GAAA,GAAM,aAAc,CAAA,OAAA,CAAQ,SAAS,CAAA;AAE3C,UAAA,IAAI,CAAC,GAAK,EAAA;AACR,YAAA,OAAA,CAAQ,IAAK,CAAA,mCAAA,EAAqC,OAAQ,CAAA,SAAA,EAAW,KAAK,IAAI,CAAA;AAC9E,YAAA;AAAA;AACF;AACF;AACF;AACF;AACF,EAEA,IAAI,uBAA0B,GAAA;AAC5B,IAAA,OAAO,IAAK,CAAA,wBAAA;AAAA;AACd,EAEA,IAAI,qBAAwB,GAAA;AAC1B,IAAA,OAAO,IAAK,CAAA,sBAAA;AAAA;AACd,EAEA,IAAI,gBAAmB,GAAA;AACrB,IAAA,OAAO,IAAK,CAAA,iBAAA;AAAA;AACd,EAEA,IAAI,oBAAuB,GAAA;AACzB,IAAA,OAAO,IAAK,CAAA,qBAAA;AAAA;AACd,EAEA,QAAgC,UAAqD,EAAA;AACnF,IAAK,IAAA,CAAA,iBAAA,CAAkB,KAAK,UAA4C,CAAA;AAExE,IAAO,OAAA,IAAA;AAAA;AACT,EAEA,aAAyB,oBAAkE,EAAA;AACzF,IAAK,IAAA,CAAA,sBAAA,CAAuB,KAAK,oBAA2D,CAAA;AAE5F,IAAO,OAAA,IAAA;AAAA;AACT,EAEA,YAAuB,mBAAoE,EAAA;AACzF,IAAK,IAAA,CAAA,qBAAA,CAAsB,KAAK,mBAAmB,CAAA;AAEnD,IAAO,OAAA,IAAA;AAAA;AACT,EAEA,gBAA4B,eAA+D,EAAA;AACzF,IAAK,IAAA,CAAA,wBAAA,CAAyB,KAAK,eAAwD,CAAA;AAE3F,IAAO,OAAA,IAAA;AAAA;AACT;AAAA,EAGA,uBAA+C,SAA6D,EAAA;AAC1G,IAAA,IAAA,CAAK,OAAQ,CAAA;AAAA,MACX,OAAA,EAAS,CAAC,SAAA,CAAU,gBAAgB,CAAA;AAAA,MACpC,GAAG;AAAA,KACJ,CAAA;AAED,IAAO,OAAA,IAAA;AAAA;AACT;AAAA,EAEA,4BAAwC,SAAgE,EAAA;AACtG,IAAA,IAAA,CAAK,YAAa,CAAA;AAAA,MAChB,OAAA,EAAS,CAAC,SAAA,CAAU,gBAAgB,CAAA;AAAA,MACpC,GAAG,SAAA;AAAA,MACH,WAAW,SAAU,CAAA;AAAA,KACtB,CAAA;AAED,IAAO,OAAA,IAAA;AAAA;AAEX;AAMY,IAAA,YAAA,qBAAAC,aAAL,KAAA;AAEL,EAAAA,cAAA,OAAQ,CAAA,GAAA,OAAA;AAER,EAAAA,cAAA,MAAO,CAAA,GAAA,MAAA;AAEP,EAAAA,cAAA,cAAe,CAAA,GAAA,cAAA;AAEf,EAAAA,cAAA,gBAAiB,CAAA,GAAA,iBAAA;AAEjB,EAAAA,cAAA,SAAU,CAAA,GAAA,SAAA;AAEV,EAAAA,cAAA,KAAM,CAAA,GAAA,KAAA;AAZI,EAAAA,OAAAA,aAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,EAAA;;;;"}