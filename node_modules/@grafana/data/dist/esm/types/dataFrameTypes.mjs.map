{"version":3,"file":"dataFrameTypes.mjs","sources":["../../../src/types/dataFrameTypes.ts"],"sourcesContent":["/**\n * See also:\n * https://github.com/grafana/grafana-plugin-sdk-go/blob/main/data/frame_type.go\n *\n * @public\n */\nexport enum DataFrameType {\n  TimeSeriesWide = 'timeseries-wide',\n  TimeSeriesLong = 'timeseries-long',\n\n  /** @deprecated in favor of TimeSeriesMulti */\n  TimeSeriesMany = 'timeseries-many',\n\n  TimeSeriesMulti = 'timeseries-multi',\n\n  /** Numeric types: https://grafana.com/developers/dataplane/numeric */\n  NumericWide = 'numeric-wide',\n  NumericMulti = 'numeric-multi',\n  NumericLong = 'numeric-long',\n\n  /** Logs types: https://grafana.com/developers/dataplane/logs */\n  LogLines = 'log-lines',\n\n  /** Directory listing */\n  DirectoryListing = 'directory-listing',\n\n  /**\n   * First field is X, the rest are ordinal values used as rows in the heatmap\n   */\n  HeatmapRows = 'heatmap-rows',\n\n  /**\n   * Explicit fields for:\n   *  xMin, yMin, count, ...\n   *\n   * All values in the grid exist and have regular spacing\n   *\n   * If the y value is actually ordinal, use `meta.custom` to specify the bucket lookup values\n   */\n  HeatmapCells = 'heatmap-cells',\n\n  /**\n   * Explicit fields for:\n   *  xMin, xMax, count\n   */\n  Histogram = 'histogram',\n}\n"],"names":["DataFrameType"],"mappings":"AAMY,IAAA,aAAA,qBAAAA,cAAL,KAAA;AACL,EAAAA,eAAA,gBAAiB,CAAA,GAAA,iBAAA;AACjB,EAAAA,eAAA,gBAAiB,CAAA,GAAA,iBAAA;AAGjB,EAAAA,eAAA,gBAAiB,CAAA,GAAA,iBAAA;AAEjB,EAAAA,eAAA,iBAAkB,CAAA,GAAA,kBAAA;AAGlB,EAAAA,eAAA,aAAc,CAAA,GAAA,cAAA;AACd,EAAAA,eAAA,cAAe,CAAA,GAAA,eAAA;AACf,EAAAA,eAAA,aAAc,CAAA,GAAA,cAAA;AAGd,EAAAA,eAAA,UAAW,CAAA,GAAA,WAAA;AAGX,EAAAA,eAAA,kBAAmB,CAAA,GAAA,mBAAA;AAKnB,EAAAA,eAAA,aAAc,CAAA,GAAA,cAAA;AAUd,EAAAA,eAAA,cAAe,CAAA,GAAA,eAAA;AAMf,EAAAA,eAAA,WAAY,CAAA,GAAA,WAAA;AAvCF,EAAAA,OAAAA,cAAAA;AAAA,CAAA,EAAA,aAAA,IAAA,EAAA;;;;"}