{"version":3,"file":"refIdMatcher.mjs","sources":["../../../../src/transformations/matchers/refIdMatcher.ts"],"sourcesContent":["import { escapeStringForRegex, stringStartsAsRegEx, stringToJsRegex } from '../../text/string';\nimport { DataFrame } from '../../types/dataFrame';\nimport { FrameMatcherInfo } from '../../types/transformations';\n\nimport { FrameMatcherID } from './ids';\n\n// General Field matcher\nconst refIdMatcher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byRefId,\n  name: 'Query refId',\n  description: 'match the refId',\n  defaultOptions: 'A',\n\n  get: (pattern: string) => {\n    let regex: RegExp | null = null;\n\n    if (stringStartsAsRegEx(pattern)) {\n      try {\n        regex = stringToJsRegex(pattern);\n      } catch (error) {\n        if (error instanceof Error) {\n          console.warn(error.message);\n        }\n      }\n    }\n    // old format that was simply unescaped pipe-joined strings -> regexp\n    else if (pattern.includes('|')) {\n      // convert A|B -> /^(?:A|B)$/, regexp-escaping all chars between pipes\n      const escapedUnion = pattern.split('|').map(escapeStringForRegex).join('|');\n      regex = new RegExp(`^(?:${escapedUnion})$`);\n    }\n\n    return (frame: DataFrame) => {\n      return regex?.test(frame.refId || '') ?? frame.refId === pattern;\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `RefID: ${pattern}`;\n  },\n};\n\nexport function getRefIdMatchers(): FrameMatcherInfo[] {\n  return [refIdMatcher];\n}\n"],"names":[],"mappings":";;;AAOA,MAAM,YAAyC,GAAA;AAAA,EAC7C,IAAI,cAAe,CAAA,OAAA;AAAA,EACnB,IAAM,EAAA,aAAA;AAAA,EACN,WAAa,EAAA,iBAAA;AAAA,EACb,cAAgB,EAAA,GAAA;AAAA,EAEhB,GAAA,EAAK,CAAC,OAAoB,KAAA;AACxB,IAAA,IAAI,KAAuB,GAAA,IAAA;AAE3B,IAAI,IAAA,mBAAA,CAAoB,OAAO,CAAG,EAAA;AAChC,MAAI,IAAA;AACF,QAAA,KAAA,GAAQ,gBAAgB,OAAO,CAAA;AAAA,eACxB,KAAO,EAAA;AACd,QAAA,IAAI,iBAAiB,KAAO,EAAA;AAC1B,UAAQ,OAAA,CAAA,IAAA,CAAK,MAAM,OAAO,CAAA;AAAA;AAC5B;AACF,KAGO,MAAA,IAAA,OAAA,CAAQ,QAAS,CAAA,GAAG,CAAG,EAAA;AAE9B,MAAM,MAAA,YAAA,GAAe,QAAQ,KAAM,CAAA,GAAG,EAAE,GAAI,CAAA,oBAAoB,CAAE,CAAA,IAAA,CAAK,GAAG,CAAA;AAC1E,MAAA,KAAA,GAAQ,IAAI,MAAA,CAAO,CAAO,IAAA,EAAA,YAAY,CAAI,EAAA,CAAA,CAAA;AAAA;AAG5C,IAAA,OAAO,CAAC,KAAqB,KAAA;AAhCjC,MAAA,IAAA,EAAA;AAiCM,MAAA,OAAA,CAAO,uCAAO,IAAK,CAAA,KAAA,CAAM,SAAS,EAA3B,CAAA,KAAA,IAAA,GAAA,EAAA,GAAkC,MAAM,KAAU,KAAA,OAAA;AAAA,KAC3D;AAAA,GACF;AAAA,EAEA,qBAAA,EAAuB,CAAC,OAAoB,KAAA;AAC1C,IAAA,OAAO,UAAU,OAAO,CAAA,CAAA;AAAA;AAE5B,CAAA;AAEO,SAAS,gBAAuC,GAAA;AACrD,EAAA,OAAO,CAAC,YAAY,CAAA;AACtB;;;;"}