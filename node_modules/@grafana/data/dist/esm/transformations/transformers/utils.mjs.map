{"version":3,"file":"utils.mjs","sources":["../../../../src/transformations/transformers/utils.ts"],"sourcesContent":["import { BootData } from '../../types/config';\nimport { DataFrame } from '../../types/dataFrame';\n\ndeclare global {\n  interface Window {\n    grafanaBootData?: BootData;\n  }\n}\n/**\n * Retrieve the maximum number of fields in a series of a dataframe.\n */\nexport function findMaxFields(data: DataFrame[]) {\n  let maxFields = 0;\n\n  // Group to nested table needs at least two fields\n  // a field to group on and to show in the nested table\n  for (const frame of data) {\n    if (frame.fields.length > maxFields) {\n      maxFields = frame.fields.length;\n    }\n  }\n\n  return maxFields;\n}\n"],"names":[],"mappings":"AAWO,SAAS,cAAc,IAAmB,EAAA;AAC/C,EAAA,IAAI,SAAY,GAAA,CAAA;AAIhB,EAAA,KAAA,MAAW,SAAS,IAAM,EAAA;AACxB,IAAI,IAAA,KAAA,CAAM,MAAO,CAAA,MAAA,GAAS,SAAW,EAAA;AACnC,MAAA,SAAA,GAAY,MAAM,MAAO,CAAA,MAAA;AAAA;AAC3B;AAGF,EAAO,OAAA,SAAA;AACT;;;;"}