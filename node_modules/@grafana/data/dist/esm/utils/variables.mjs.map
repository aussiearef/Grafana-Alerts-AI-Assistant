{"version":3,"file":"variables.mjs","sources":["../../../src/utils/variables.ts"],"sourcesContent":["import { ScopedVars } from '../types/ScopedVars';\n\nconst SEARCH_FILTER_VARIABLE = '__searchFilter';\n\nexport const containsSearchFilter = (query: string | unknown): boolean =>\n  query && typeof query === 'string' ? query.indexOf(SEARCH_FILTER_VARIABLE) !== -1 : false;\n\nexport interface SearchFilterOptions {\n  searchFilter?: string;\n}\n\nexport const getSearchFilterScopedVar = (args: {\n  query: string;\n  wildcardChar: string;\n  options?: SearchFilterOptions;\n}): ScopedVars => {\n  const { query, wildcardChar } = args;\n  if (!containsSearchFilter(query)) {\n    return {};\n  }\n\n  let { options } = args;\n\n  options = options || { searchFilter: '' };\n  const value = options.searchFilter ? `${options.searchFilter}${wildcardChar}` : `${wildcardChar}`;\n\n  return {\n    __searchFilter: {\n      value,\n      text: '',\n    },\n  };\n};\n"],"names":[],"mappings":"AAEA,MAAM,sBAAyB,GAAA,gBAAA;AAElB,MAAA,oBAAA,GAAuB,CAAC,KAAA,KACnC,KAAS,IAAA,OAAO,KAAU,KAAA,QAAA,GAAW,KAAM,CAAA,OAAA,CAAQ,sBAAsB,CAAA,KAAM,EAAK,GAAA;AAMzE,MAAA,wBAAA,GAA2B,CAAC,IAIvB,KAAA;AAChB,EAAM,MAAA,EAAE,KAAO,EAAA,YAAA,EAAiB,GAAA,IAAA;AAChC,EAAI,IAAA,CAAC,oBAAqB,CAAA,KAAK,CAAG,EAAA;AAChC,IAAA,OAAO,EAAC;AAAA;AAGV,EAAI,IAAA,EAAE,SAAY,GAAA,IAAA;AAElB,EAAU,OAAA,GAAA,OAAA,IAAW,EAAE,YAAA,EAAc,EAAG,EAAA;AACxC,EAAM,MAAA,KAAA,GAAQ,OAAQ,CAAA,YAAA,GAAe,CAAG,EAAA,OAAA,CAAQ,YAAY,CAAG,EAAA,YAAY,CAAK,CAAA,GAAA,CAAA,EAAG,YAAY,CAAA,CAAA;AAE/F,EAAO,OAAA;AAAA,IACL,cAAgB,EAAA;AAAA,MACd,KAAA;AAAA,MACA,IAAM,EAAA;AAAA;AACR,GACF;AACF;;;;"}