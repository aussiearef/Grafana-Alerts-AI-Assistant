{"version":3,"file":"FeatureBadge.mjs","sources":["../../../../src/components/FeatureBadge/FeatureBadge.tsx"],"sourcesContent":["import { FeatureState } from '@grafana/data';\n\nimport { t } from '../../utils/i18n';\nimport { Badge, BadgeProps } from '../Badge/Badge';\n\nexport interface FeatureBadgeProps {\n  featureState: FeatureState;\n  tooltip?: string;\n}\n\nexport const FeatureBadge = ({ featureState, tooltip }: FeatureBadgeProps) => {\n  const display = getPanelStateBadgeDisplayModel(featureState);\n  return <Badge text={display.text} color={display.color} icon={display.icon} tooltip={tooltip} />;\n};\n\nfunction getPanelStateBadgeDisplayModel(featureState: FeatureState): BadgeProps {\n  switch (featureState) {\n    case FeatureState.alpha:\n      return {\n        text: 'Alpha',\n        icon: 'exclamation-triangle',\n        color: 'orange',\n      };\n\n    case FeatureState.beta:\n      return {\n        text: 'Beta',\n        icon: 'rocket',\n        color: 'blue',\n      };\n\n    case FeatureState.experimental:\n      return {\n        text: t('grafana-ui.feature-badge.experimental', 'Experimental'),\n        icon: 'exclamation-triangle',\n        color: 'orange',\n      };\n\n    case FeatureState.preview:\n      return {\n        text: t('grafana-ui.feature-badge.preview', 'Preview'),\n        icon: 'rocket',\n        color: 'blue',\n      };\n\n    case FeatureState.privatePreview:\n      return {\n        text: t('grafana-ui.feature-badge.private-preview', 'Private preview'),\n        icon: 'rocket',\n        color: 'blue',\n      };\n\n    case FeatureState.new:\n      return {\n        text: t('grafana-ui.feature-badge.new', 'New!'),\n        icon: 'rocket',\n        color: 'blue',\n      };\n  }\n}\n"],"names":[],"mappings":";;;;;AAUO,MAAM,YAAe,GAAA,CAAC,EAAE,YAAA,EAAc,SAAiC,KAAA;AAC5E,EAAM,MAAA,OAAA,GAAU,+BAA+B,YAAY,CAAA;AAC3D,EAAO,uBAAA,GAAA,CAAC,KAAM,EAAA,EAAA,IAAA,EAAM,OAAQ,CAAA,IAAA,EAAM,KAAO,EAAA,OAAA,CAAQ,KAAO,EAAA,IAAA,EAAM,OAAQ,CAAA,IAAA,EAAM,OAAkB,EAAA,CAAA;AAChG;AAEA,SAAS,+BAA+B,YAAwC,EAAA;AAC9E,EAAA,QAAQ,YAAc;AAAA,IACpB,KAAK,YAAa,CAAA,KAAA;AAChB,MAAO,OAAA;AAAA,QACL,IAAM,EAAA,OAAA;AAAA,QACN,IAAM,EAAA,sBAAA;AAAA,QACN,KAAO,EAAA;AAAA,OACT;AAAA,IAEF,KAAK,YAAa,CAAA,IAAA;AAChB,MAAO,OAAA;AAAA,QACL,IAAM,EAAA,MAAA;AAAA,QACN,IAAM,EAAA,QAAA;AAAA,QACN,KAAO,EAAA;AAAA,OACT;AAAA,IAEF,KAAK,YAAa,CAAA,YAAA;AAChB,MAAO,OAAA;AAAA,QACL,IAAA,EAAM,CAAE,CAAA,uCAAA,EAAyC,cAAc,CAAA;AAAA,QAC/D,IAAM,EAAA,sBAAA;AAAA,QACN,KAAO,EAAA;AAAA,OACT;AAAA,IAEF,KAAK,YAAa,CAAA,OAAA;AAChB,MAAO,OAAA;AAAA,QACL,IAAA,EAAM,CAAE,CAAA,kCAAA,EAAoC,SAAS,CAAA;AAAA,QACrD,IAAM,EAAA,QAAA;AAAA,QACN,KAAO,EAAA;AAAA,OACT;AAAA,IAEF,KAAK,YAAa,CAAA,cAAA;AAChB,MAAO,OAAA;AAAA,QACL,IAAA,EAAM,CAAE,CAAA,0CAAA,EAA4C,iBAAiB,CAAA;AAAA,QACrE,IAAM,EAAA,QAAA;AAAA,QACN,KAAO,EAAA;AAAA,OACT;AAAA,IAEF,KAAK,YAAa,CAAA,GAAA;AAChB,MAAO,OAAA;AAAA,QACL,IAAA,EAAM,CAAE,CAAA,8BAAA,EAAgC,MAAM,CAAA;AAAA,QAC9C,IAAM,EAAA,QAAA;AAAA,QACN,KAAO,EAAA;AAAA,OACT;AAAA;AAEN;;;;"}