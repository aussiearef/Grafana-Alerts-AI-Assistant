{"version":3,"file":"CertificationKey.mjs","sources":["../../../../src/components/DataSourceSettings/CertificationKey.tsx"],"sourcesContent":["import { ChangeEvent, MouseEvent } from 'react';\n\nimport { Trans } from '../../utils/i18n';\nimport { Button } from '../Button';\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { Input } from '../Input/Input';\nimport { TextArea } from '../TextArea/TextArea';\n\ninterface Props {\n  label: string;\n  hasCert: boolean;\n  placeholder: string;\n\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const CertificationKey = ({ hasCert, label, onChange, onClick, placeholder }: Props) => {\n  return (\n    <InlineFieldRow>\n      <InlineField label={label} labelWidth={14} disabled={hasCert}>\n        {hasCert ? (\n          <Input type=\"text\" value=\"configured\" width={24} />\n        ) : (\n          <TextArea rows={7} onChange={onChange} placeholder={placeholder} required />\n        )}\n      </InlineField>\n      {hasCert && (\n        <Button variant=\"secondary\" onClick={onClick} style={{ marginLeft: 4 }}>\n          <Trans i18nKey=\"grafana-ui.data-source-settings.cert-key-reset\">Reset</Trans>\n        </Button>\n      )}\n    </InlineFieldRow>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAkBa,MAAA,gBAAA,GAAmB,CAAC,EAAE,OAAA,EAAS,OAAO,QAAU,EAAA,OAAA,EAAS,aAAyB,KAAA;AAC7F,EAAA,4BACG,cACC,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAC,GAAA,CAAA,WAAA,EAAA,EAAY,KAAc,EAAA,UAAA,EAAY,EAAI,EAAA,QAAA,EAAU,SAClD,QACC,EAAA,OAAA,mBAAA,GAAA,CAAC,KAAM,EAAA,EAAA,IAAA,EAAK,MAAO,EAAA,KAAA,EAAM,cAAa,KAAO,EAAA,EAAA,EAAI,CAEjD,mBAAA,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAM,GAAG,QAAoB,EAAA,WAAA,EAA0B,QAAQ,EAAA,IAAA,EAAC,CAE9E,EAAA,CAAA;AAAA,IACC,2BACE,GAAA,CAAA,MAAA,EAAA,EAAO,OAAQ,EAAA,WAAA,EAAY,SAAkB,KAAO,EAAA,EAAE,UAAY,EAAA,CAAA,IACjE,QAAC,kBAAA,GAAA,CAAA,KAAA,EAAA,EAAM,OAAQ,EAAA,gDAAA,EAAiD,mBAAK,CACvE,EAAA;AAAA,GAEJ,EAAA,CAAA;AAEJ;;;;"}