{"version":3,"file":"DataSourceHttpSettings.mjs","sources":["../../../../src/components/DataSourceSettings/DataSourceHttpSettings.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useState, useCallback, useId } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { t, Trans } from '../../utils/i18n';\nimport { Alert } from '../Alert/Alert';\nimport { FormField } from '../FormField/FormField';\nimport { InlineFormLabel } from '../FormLabel/FormLabel';\nimport { InlineField } from '../Forms/InlineField';\nimport { Input } from '../Forms/Legacy/Input/Input';\nimport { Icon } from '../Icon/Icon';\nimport { Select } from '../Select/Select';\nimport { InlineSwitch } from '../Switch/Switch';\nimport { TagsInput } from '../TagsInput/TagsInput';\nimport { Text } from '../Text/Text';\n\nimport { BasicAuthSettings } from './BasicAuthSettings';\nimport { CustomHeadersSettings } from './CustomHeadersSettings';\nimport { HttpProxySettings } from './HttpProxySettings';\nimport { SecureSocksProxySettings } from './SecureSocksProxySettings';\nimport { TLSAuthSettings } from './TLSAuthSettings';\nimport { HttpSettingsProps } from './types';\n\nconst ACCESS_OPTIONS: Array<SelectableValue<string>> = [\n  {\n    label: t('grafana-ui.data-source-http-settings.access-options-proxy', 'Server (default)'),\n    value: 'proxy',\n  },\n  {\n    label: t('grafana-ui.data-source-http-settings.access-options-browser', 'Browser'),\n    value: 'direct',\n  },\n];\n\nconst DEFAULT_ACCESS_OPTION = {\n  label: t('grafana-ui.data-source-http-settings.access-options-proxy', 'Server (default)'),\n  value: 'proxy',\n};\n\nconst HttpAccessHelp = () => {\n  return (\n    // eslint-disable-next-line @grafana/no-untranslated-strings\n    <Alert severity=\"info\" title=\"\" topSpacing={3}>\n      <p>\n        <Trans i18nKey=\"grafana-ui.data-source-http-settings.access-help-details\">\n          Access mode controls how requests to the data source will be handled.\n          <strong>\n            &nbsp;<i>Server</i>\n          </strong>{' '}\n          should be the preferred way if nothing else is stated.\n        </Trans>\n      </p>\n      <Trans i18nKey=\"grafana-ui.data-source-http-settings.server-mode-title\">\n        <Text weight=\"medium\">Server access mode (Default):</Text>\n      </Trans>\n      <p>\n        <Trans i18nKey=\"grafana-ui.data-source-http-settings.server-mode-description\">\n          All requests will be made from the browser to Grafana backend/server which in turn will forward the requests\n          to the data source and by that circumvent possible Cross-Origin Resource Sharing (CORS) requirements. The URL\n          needs to be accessible from the grafana backend/server if you select this access mode.\n        </Trans>\n      </p>\n      <Trans i18nKey=\"grafana-ui.data-source-http-settings.browser-mode-title\">\n        <Text weight=\"medium\">Browser access mode:</Text>\n      </Trans>\n      <p>\n        <Trans i18nKey=\"grafana-ui.data-source-http-settings.browser-mode-description\">\n          All requests will be made from the browser directly to the data source and may be subject to Cross-Origin\n          Resource Sharing (CORS) requirements. The URL needs to be accessible from the browser if you select this\n          access mode.\n        </Trans>\n      </p>\n    </Alert>\n  );\n};\n\nconst LABEL_WIDTH = 26;\n\nexport const DataSourceHttpSettings = (props: HttpSettingsProps) => {\n  const {\n    defaultUrl,\n    dataSourceConfig,\n    onChange,\n    showAccessOptions,\n    sigV4AuthToggleEnabled,\n    showForwardOAuthIdentityOption,\n    azureAuthSettings,\n    renderSigV4Editor,\n    secureSocksDSProxyEnabled,\n    urlLabel,\n    urlDocs,\n  } = props;\n\n  const [isAccessHelpVisible, setIsAccessHelpVisible] = useState(false);\n  const [azureAuthEnabled, setAzureAuthEnabled] = useState(false);\n  const theme = useTheme2();\n  let urlTooltip;\n\n  const onSettingsChange = useCallback(\n    (change: Partial<typeof dataSourceConfig>) => {\n      // Azure Authentication doesn't work correctly when Forward OAuth Identity is enabled.\n      // The Authorization header that has been set by the ApplyAzureAuth middleware gets overwritten\n      // with the Authorization header set by the OAuthTokenMiddleware.\n      const isAzureAuthEnabled =\n        (azureAuthSettings?.azureAuthSupported && azureAuthSettings.getAzureAuthEnabled(dataSourceConfig)) || false;\n      setAzureAuthEnabled(isAzureAuthEnabled);\n      if (isAzureAuthEnabled) {\n        const tmpOauthPassThru =\n          dataSourceConfig.jsonData.oauthPassThru !== undefined ? dataSourceConfig.jsonData.oauthPassThru : false;\n        change = {\n          ...change,\n          jsonData: {\n            ...dataSourceConfig.jsonData,\n            oauthPassThru: isAzureAuthEnabled ? false : tmpOauthPassThru,\n          },\n        };\n      }\n\n      onChange({\n        ...dataSourceConfig,\n        ...change,\n      });\n    },\n    [azureAuthSettings, dataSourceConfig, onChange]\n  );\n\n  switch (dataSourceConfig.access) {\n    case 'direct':\n      urlTooltip = (\n        <>\n          <Trans i18nKey=\"grafana-ui.data-source-http-settings.direct-url-tooltip\">\n            Your access method is <em>Browser</em>, this means the URL needs to be accessible from the browser.\n          </Trans>\n          {urlDocs}\n        </>\n      );\n      break;\n    case 'proxy':\n      urlTooltip = (\n        <>\n          <Trans i18nKey=\"grafana-ui.data-source-http-settings.proxy-url-tooltip\">\n            Your access method is <em>Server</em>, this means the URL needs to be accessible from the grafana\n            backend/server.\n          </Trans>\n          {urlDocs}\n        </>\n      );\n      break;\n    default:\n      urlTooltip = (\n        <>\n          <Trans i18nKey=\"grafana-ui.data-source-http-settings.default-url-tooltip\">\n            Specify a complete HTTP URL (for example http://your_server:8080)\n          </Trans>\n          {urlDocs}\n        </>\n      );\n  }\n\n  const accessSelect = (\n    <Select\n      aria-label={t('grafana-ui.data-source-http-settings.default-url-access-select', 'Access')}\n      className=\"width-20 gf-form-input\"\n      options={ACCESS_OPTIONS}\n      value={ACCESS_OPTIONS.filter((o) => o.value === dataSourceConfig.access)[0] || DEFAULT_ACCESS_OPTION}\n      onChange={(selectedValue) => onSettingsChange({ access: selectedValue.value })}\n      disabled={dataSourceConfig.readOnly}\n    />\n  );\n\n  const isValidUrl = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(\n    dataSourceConfig.url\n  );\n\n  const notValidStyle = css({\n    boxShadow: `inset 0 0px 5px ${theme.v1.palette.red}`,\n  });\n\n  const inputStyle = cx({ [`width-20`]: true, [notValidStyle]: !isValidUrl });\n\n  const fromFieldId = useId();\n\n  const urlInput = (\n    <Input\n      id={fromFieldId}\n      className={inputStyle}\n      placeholder={defaultUrl}\n      value={dataSourceConfig.url}\n      data-testid={selectors.components.DataSource.DataSourceHttpSettings.urlInput}\n      onChange={(event) => onSettingsChange({ url: event.currentTarget.value })}\n      disabled={dataSourceConfig.readOnly}\n    />\n  );\n\n  return (\n    <div className=\"gf-form-group\">\n      <>\n        <h3 className=\"page-heading\">\n          <Trans i18nKey=\"grafana-ui.data-source-http-settings.heading\">HTTP</Trans>\n        </h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <FormField\n              interactive={urlDocs ? true : false}\n              label={urlLabel ?? t('grafana-ui.data-source-http-settings.url-label', 'URL')}\n              labelWidth={13}\n              tooltip={urlTooltip}\n              inputEl={urlInput}\n            />\n          </div>\n\n          {showAccessOptions && (\n            <>\n              <div className=\"gf-form-inline\">\n                <div className=\"gf-form\">\n                  <FormField\n                    label={t('grafana-ui.data-source-http-settings.access-label', 'Access')}\n                    labelWidth={13}\n                    inputWidth={20}\n                    inputEl={accessSelect}\n                  />\n                </div>\n                <div className=\"gf-form\">\n                  <button\n                    type=\"button\"\n                    className=\"gf-form-label query-keyword pointer\"\n                    onClick={() => setIsAccessHelpVisible((isVisible) => !isVisible)}\n                  >\n                    <Trans i18nKey=\"grafana-ui.data-source-http-settings.access-help\">\n                      Help&nbsp;\n                      <Icon name={isAccessHelpVisible ? 'angle-down' : 'angle-right'} style={{ marginBottom: 0 }} />\n                    </Trans>\n                  </button>\n                </div>\n              </div>\n              {isAccessHelpVisible && <HttpAccessHelp />}\n            </>\n          )}\n          {dataSourceConfig.access === 'proxy' && (\n            <div className=\"gf-form-group\">\n              <div className=\"gf-form\">\n                <InlineFormLabel\n                  width={13}\n                  tooltip={t(\n                    'grafana-ui.data-source-http-settings.allowed-cookies-tooltip',\n                    'Grafana proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.'\n                  )}\n                >\n                  <Trans i18nKey=\"grafana-ui.data-source-http-settings.allowed-cookies\">Allowed cookies</Trans>\n                </InlineFormLabel>\n                <TagsInput\n                  tags={dataSourceConfig.jsonData.keepCookies}\n                  width={40}\n                  onChange={(cookies) =>\n                    onSettingsChange({ jsonData: { ...dataSourceConfig.jsonData, keepCookies: cookies } })\n                  }\n                  disabled={dataSourceConfig.readOnly}\n                />\n              </div>\n              <div className=\"gf-form\">\n                <FormField\n                  label={t('grafana-ui.data-source-http-settings.timeout-form-label', 'Timeout')}\n                  type=\"number\"\n                  labelWidth={13}\n                  inputWidth={20}\n                  tooltip={t('grafana-ui.data-source-http-settings.timeout-tooltip', 'HTTP request timeout in seconds')}\n                  placeholder={t('grafana-ui.data-source-http-settings.timeout-label', 'Timeout in seconds')}\n                  aria-label={t('grafana-ui.data-source-http-settings.timeout-label', 'Timeout in seconds')}\n                  value={dataSourceConfig.jsonData.timeout}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, timeout: parseInt(event.currentTarget.value, 10) },\n                    });\n                  }}\n                  disabled={dataSourceConfig.readOnly}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n\n      <>\n        <h3 className=\"page-heading\">\n          <Trans i18nKey=\"grafana-ui.data-source-http-settings.auth\">Auth</Trans>\n        </h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <InlineField\n              label={t('grafana-ui.data-source-http-settings.basic-auth-label', 'Basic auth')}\n              labelWidth={LABEL_WIDTH}\n              disabled={dataSourceConfig.readOnly}\n            >\n              <InlineSwitch\n                id=\"http-settings-basic-auth\"\n                value={dataSourceConfig.basicAuth}\n                onChange={(event) => {\n                  onSettingsChange({ basicAuth: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n\n            <InlineField\n              label={t('grafana-ui.data-source-http-settings.with-credential-label', 'With Credentials')}\n              tooltip={t(\n                'grafana-ui.data-source-http-settings.with-credential-tooltip',\n                'Whether credentials such as cookies or auth headers should be sent with cross-site requests.'\n              )}\n              labelWidth={LABEL_WIDTH}\n              disabled={dataSourceConfig.readOnly}\n            >\n              <InlineSwitch\n                id=\"http-settings-with-credentials\"\n                value={dataSourceConfig.withCredentials}\n                onChange={(event) => {\n                  onSettingsChange({ withCredentials: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n          </div>\n\n          {azureAuthSettings?.azureAuthSupported && (\n            <div className=\"gf-form-inline\">\n              <InlineField\n                label={t('grafana-ui.data-source-http-settings.azure-auth-label', 'Azure Authentication')}\n                tooltip={t(\n                  'grafana-ui.data-source-http-settings.azure-auth-tooltip',\n                  'Use Azure authentication for Azure endpoint.'\n                )}\n                labelWidth={LABEL_WIDTH}\n                disabled={dataSourceConfig.readOnly}\n              >\n                <InlineSwitch\n                  id=\"http-settings-azure-auth\"\n                  value={azureAuthEnabled}\n                  onChange={(event) => {\n                    onSettingsChange(\n                      azureAuthSettings.setAzureAuthEnabled(dataSourceConfig, event!.currentTarget.checked)\n                    );\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {sigV4AuthToggleEnabled && (\n            <div className=\"gf-form-inline\">\n              <InlineField\n                // eslint-disable-next-line @grafana/no-untranslated-strings\n                label=\"SigV4 auth\"\n                labelWidth={LABEL_WIDTH}\n                disabled={dataSourceConfig.readOnly}\n              >\n                <InlineSwitch\n                  id=\"http-settings-sigv4-auth\"\n                  value={dataSourceConfig.jsonData.sigV4Auth || false}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, sigV4Auth: event!.currentTarget.checked },\n                    });\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {dataSourceConfig.access === 'proxy' && (\n            <HttpProxySettings\n              dataSourceConfig={dataSourceConfig}\n              onChange={(jsonData) => onSettingsChange({ jsonData })}\n              showForwardOAuthIdentityOption={azureAuthEnabled ? false : showForwardOAuthIdentityOption}\n            />\n          )}\n        </div>\n        {dataSourceConfig.basicAuth && (\n          <>\n            <h6>\n              <Trans i18nKey=\"grafana-ui.data-source-http-settings.basic-auth\">Basic Auth Details</Trans>\n            </h6>\n            <div className=\"gf-form-group\">\n              <BasicAuthSettings {...props} />\n            </div>\n          </>\n        )}\n\n        {azureAuthSettings?.azureAuthSupported && azureAuthEnabled && azureAuthSettings.azureSettingsUI && (\n          <azureAuthSettings.azureSettingsUI dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.jsonData.sigV4Auth && sigV4AuthToggleEnabled && renderSigV4Editor}\n        {(dataSourceConfig.jsonData.tlsAuth || dataSourceConfig.jsonData.tlsAuthWithCACert) && (\n          <TLSAuthSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.access === 'proxy' && (\n          <CustomHeadersSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n      </>\n      {secureSocksDSProxyEnabled && <SecureSocksProxySettings options={dataSourceConfig} onOptionsChange={onChange} />}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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"}