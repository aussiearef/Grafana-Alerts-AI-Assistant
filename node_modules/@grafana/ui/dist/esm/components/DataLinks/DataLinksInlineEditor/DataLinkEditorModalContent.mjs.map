{"version":3,"file":"DataLinkEditorModalContent.mjs","sources":["../../../../../src/components/DataLinks/DataLinksInlineEditor/DataLinkEditorModalContent.tsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { DataFrame, DataLink, VariableSuggestion } from '@grafana/data';\n\nimport { Trans } from '../../../utils/i18n';\nimport { Button } from '../../Button';\nimport { Modal } from '../../Modal/Modal';\nimport { DataLinkEditor } from '../DataLinkEditor';\n\ninterface DataLinkEditorModalContentProps {\n  link: DataLink;\n  index: number;\n  data: DataFrame[];\n  getSuggestions: () => VariableSuggestion[];\n  onSave: (index: number, ink: DataLink) => void;\n  onCancel: (index: number) => void;\n  showOneClick?: boolean;\n}\n\nexport const DataLinkEditorModalContent = ({\n  link,\n  index,\n  onSave,\n  onCancel,\n  getSuggestions,\n  showOneClick,\n}: DataLinkEditorModalContentProps) => {\n  const [dirtyLink, setDirtyLink] = useState(link);\n  return (\n    <>\n      <DataLinkEditor\n        value={dirtyLink}\n        index={index}\n        isLast={false}\n        onChange={(index, link) => {\n          setDirtyLink(link);\n        }}\n        suggestions={getSuggestions()}\n        showOneClick={showOneClick}\n      />\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={() => onCancel(index)} fill=\"outline\">\n          <Trans i18nKey=\"grafana-ui.data-link-editor-modal.cancel\">Cancel</Trans>\n        </Button>\n        <Button\n          onClick={() => {\n            onSave(index, dirtyLink);\n          }}\n          disabled={dirtyLink.title.trim() === '' || dirtyLink.url.trim() === ''}\n        >\n          <Trans i18nKey=\"grafana-ui.data-link-editor-modal.save\">Save</Trans>\n        </Button>\n      </Modal.ButtonRow>\n    </>\n  );\n};\n"],"names":["index","link"],"mappings":";;;;;;;;AAmBO,MAAM,6BAA6B,CAAC;AAAA,EACzC,IAAA;AAAA,EACA,KAAA;AAAA,EACA,MAAA;AAAA,EACA,QAAA;AAAA,EACA,cAAA;AAAA,EACA;AACF,CAAuC,KAAA;AACrC,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAI,SAAS,IAAI,CAAA;AAC/C,EAAA,uBAEI,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,cAAA;AAAA,MAAA;AAAA,QACC,KAAO,EAAA,SAAA;AAAA,QACP,KAAA;AAAA,QACA,MAAQ,EAAA,KAAA;AAAA,QACR,QAAA,EAAU,CAACA,MAAAA,EAAOC,KAAS,KAAA;AACzB,UAAA,YAAA,CAAaA,KAAI,CAAA;AAAA,SACnB;AAAA,QACA,aAAa,cAAe,EAAA;AAAA,QAC5B;AAAA;AAAA,KACF;AAAA,oBACA,IAAA,CAAC,KAAM,CAAA,SAAA,EAAN,EACC,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,MAAO,EAAA,EAAA,OAAA,EAAQ,WAAY,EAAA,OAAA,EAAS,MAAM,QAAS,CAAA,KAAK,CAAG,EAAA,IAAA,EAAK,WAC/D,QAAC,kBAAA,GAAA,CAAA,KAAA,EAAA,EAAM,OAAQ,EAAA,0CAAA,EAA2C,oBAAM,CAClE,EAAA,CAAA;AAAA,sBACA,GAAA;AAAA,QAAC,MAAA;AAAA,QAAA;AAAA,UACC,SAAS,MAAM;AACb,YAAA,MAAA,CAAO,OAAO,SAAS,CAAA;AAAA,WACzB;AAAA,UACA,QAAA,EAAU,UAAU,KAAM,CAAA,IAAA,OAAW,EAAM,IAAA,SAAA,CAAU,GAAI,CAAA,IAAA,EAAW,KAAA,EAAA;AAAA,UAEpE,QAAC,kBAAA,GAAA,CAAA,KAAA,EAAA,EAAM,OAAQ,EAAA,wCAAA,EAAyC,QAAI,EAAA,MAAA,EAAA;AAAA;AAAA;AAC9D,KACF,EAAA;AAAA,GACF,EAAA,CAAA;AAEJ;;;;"}