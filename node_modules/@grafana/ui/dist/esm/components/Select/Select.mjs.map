{"version":3,"file":"Select.mjs","sources":["../../../../src/components/Select/Select.tsx"],"sourcesContent":["import { SelectableValue } from '@grafana/data';\n\nimport { SelectBase } from './SelectBase';\nimport { SelectContainer, SelectContainerProps } from './SelectContainer';\nimport {\n  SelectCommonProps,\n  MultiSelectCommonProps,\n  SelectAsyncProps,\n  VirtualizedSelectProps,\n  VirtualizedSelectAsyncProps,\n} from './types';\n\n/** @deprecated Use Combobox component instead */\nexport function Select<T, Rest = {}>(props: SelectCommonProps<T> & Rest) {\n  return <SelectBase {...props} />;\n}\n\nexport function MultiSelect<T, Rest = {}>(props: MultiSelectCommonProps<T> & Rest) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport interface AsyncSelectProps<T> extends Omit<SelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: T | SelectableValue<T> | null;\n}\n\n/** @deprecated Use Combobox component instead */\nexport function AsyncSelect<T, Rest = {}>(props: AsyncSelectProps<T> & Rest) {\n  return <SelectBase {...props} />;\n}\n\n/** @deprecated Use Combobox component instead - it's virtualised by default! */\nexport function VirtualizedSelect<T, Rest = {}>(props: VirtualizedSelectProps<T> & Rest) {\n  return <SelectBase virtualized {...props} />;\n}\n\n/** @deprecated Use Combobox component instead - it's virtualised by default! */\nexport function AsyncVirtualizedSelect<T, Rest = {}>(props: VirtualizedSelectAsyncProps<T> & Rest) {\n  return <SelectBase virtualized {...props} />;\n}\n\ninterface AsyncMultiSelectProps<T> extends Omit<MultiSelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: Array<SelectableValue<T>>;\n}\n\nexport function AsyncMultiSelect<T, Rest = {}>(props: AsyncMultiSelectProps<T> & Rest) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport { SelectContainer, type SelectContainerProps };\n"],"names":[],"mappings":";;;;;;;;;;;AAaO,SAAS,OAAqB,KAAoC,EAAA;AACvE,EAAO,uBAAA,GAAA,CAAC,UAAY,EAAA,EAAA,GAAG,KAAO,EAAA,CAAA;AAChC;AAEO,SAAS,YAA0B,KAAyC,EAAA;AAEjF,EAAA,uBAAQ,GAAA,CAAA,UAAA,EAAA,EAAY,GAAG,KAAA,EAAO,SAAO,IAAC,EAAA,CAAA;AACxC;AAQO,SAAS,YAA0B,KAAmC,EAAA;AAC3E,EAAO,uBAAA,GAAA,CAAC,UAAY,EAAA,EAAA,GAAG,KAAO,EAAA,CAAA;AAChC;AAGO,SAAS,kBAAgC,KAAyC,EAAA;AACvF,EAAA,uBAAQ,GAAA,CAAA,UAAA,EAAA,EAAW,WAAW,EAAA,IAAA,EAAE,GAAG,KAAO,EAAA,CAAA;AAC5C;AAGO,SAAS,uBAAqC,KAA8C,EAAA;AACjG,EAAA,uBAAQ,GAAA,CAAA,UAAA,EAAA,EAAW,WAAW,EAAA,IAAA,EAAE,GAAG,KAAO,EAAA,CAAA;AAC5C;AAOO,SAAS,iBAA+B,KAAwC,EAAA;AAErF,EAAA,uBAAQ,GAAA,CAAA,UAAA,EAAA,EAAY,GAAG,KAAA,EAAO,SAAO,IAAC,EAAA,CAAA;AACxC;;;;"}