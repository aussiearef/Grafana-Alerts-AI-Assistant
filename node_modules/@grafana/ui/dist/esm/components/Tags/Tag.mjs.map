{"version":3,"file":"Tag.mjs","sources":["../../../../src/components/Tags/Tag.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport { forwardRef, HTMLAttributes } from 'react';\nimport * as React from 'react';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { getTagColor, getTagColorsFromName } from '../../utils';\nimport { SkeletonComponent, attachSkeleton } from '../../utils/skeleton';\nimport { Icon } from '../Icon/Icon';\n\n/**\n * @public\n */\nexport type OnTagClick = (name: string, event: React.MouseEvent<HTMLElement>) => void;\n\nexport interface Props extends Omit<HTMLAttributes<HTMLElement>, 'onClick'> {\n  /** Name of the tag to display */\n  name: string;\n  icon?: IconName;\n  /** Use constant color from TAG_COLORS. Using index instead of color directly so we can match other styling. */\n  colorIndex?: number;\n  onClick?: OnTagClick;\n}\n\nconst TagComponent = forwardRef<HTMLElement, Props>(({ name, onClick, icon, className, colorIndex, ...rest }, ref) => {\n  const theme = useTheme2();\n  const styles = getTagStyles(theme, name, colorIndex);\n\n  const onTagClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onClick?.(name, event);\n  };\n\n  const classes = cx(styles.wrapper, className, { [styles.hover]: onClick !== undefined });\n\n  return onClick ? (\n    <button {...rest} className={classes} onClick={onTagClick} ref={ref as React.ForwardedRef<HTMLButtonElement>}>\n      {icon && <Icon name={icon} />}\n      {name}\n    </button>\n  ) : (\n    <span {...rest} className={classes} ref={ref}>\n      {icon && <Icon name={icon} />}\n      {name}\n    </span>\n  );\n});\nTagComponent.displayName = 'Tag';\n\nconst TagSkeleton: SkeletonComponent = ({ rootProps }) => {\n  const styles = useStyles2(getSkeletonStyles);\n  return <Skeleton width={60} height={22} containerClassName={styles.container} {...rootProps} />;\n};\n\nexport const Tag = attachSkeleton(TagComponent, TagSkeleton);\n\nconst getSkeletonStyles = () => ({\n  container: css({\n    lineHeight: 1,\n  }),\n});\n\nconst getTagStyles = (theme: GrafanaTheme2, name: string, colorIndex?: number) => {\n  let colors;\n  if (colorIndex === undefined) {\n    colors = getTagColorsFromName(name);\n  } else {\n    colors = getTagColor(colorIndex);\n  }\n  return {\n    wrapper: css({\n      appearance: 'none',\n      borderStyle: 'none',\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.size.sm,\n      lineHeight: theme.typography.bodySmall.lineHeight,\n      verticalAlign: 'baseline',\n      backgroundColor: colors.color,\n      color: theme.v1.palette.gray98,\n      whiteSpace: 'pre',\n      textShadow: 'none',\n      padding: '3px 6px',\n      borderRadius: theme.shape.radius.default,\n    }),\n    hover: css({\n      '&:hover': {\n        opacity: 0.85,\n        cursor: 'pointer',\n      },\n    }),\n  };\n};\n"],"names":[],"mappings":"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"}