import { jsx } from 'react/jsx-runtime';
import { useCallback, useMemo } from 'react';
import { selectors } from '@grafana/e2e-selectors';
import { Combobox } from '../Combobox/Combobox.mjs';

const weekStarts = [
  { value: "", label: "Default" },
  { value: "saturday", label: "Saturday" },
  { value: "sunday", label: "Sunday" },
  { value: "monday", label: "Monday" }
];
function isWeekStart(value) {
  return ["saturday", "sunday", "monday"].includes(value);
}
function getWeekStart(override) {
  var _a, _b;
  if (override && isWeekStart(override)) {
    return override;
  }
  const preference = (_b = (_a = window == null ? undefined : window.grafanaBootData) == null ? undefined : _a.user) == null ? undefined : _b.weekStart;
  if (preference && isWeekStart(preference)) {
    return preference;
  }
  return "monday";
}
const WeekStartPicker = (props) => {
  const { onChange, width, autoFocus = false, onBlur, value, disabled = false, inputId } = props;
  const onChangeWeekStart = useCallback(
    (selectable) => {
      if (selectable && selectable.value !== undefined) {
        onChange(isWeekStart(selectable.value) ? selectable.value : undefined);
      }
    },
    [onChange]
  );
  const selected = useMemo(() => {
    var _a, _b;
    return (_b = (_a = weekStarts.find((item) => item.value === value)) == null ? undefined : _a.value) != null ? _b : "";
  }, [value]);
  return /* @__PURE__ */ jsx(
    Combobox,
    {
      id: inputId,
      value: selected,
      placeholder: selectors.components.WeekStartPicker.placeholder,
      autoFocus,
      width,
      options: weekStarts,
      onChange: onChangeWeekStart,
      onBlur,
      disabled
    }
  );
};

export { WeekStartPicker, getWeekStart, isWeekStart };
//# sourceMappingURL=WeekStartPicker.mjs.map
