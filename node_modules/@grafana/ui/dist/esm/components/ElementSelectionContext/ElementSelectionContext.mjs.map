{"version":3,"file":"ElementSelectionContext.mjs","sources":["../../../../src/components/ElementSelectionContext/ElementSelectionContext.tsx"],"sourcesContent":["import React, { createContext, useCallback, useContext } from 'react';\n\n/** @alpha */\nexport interface ElementSelectionContextState {\n  /**\n   * Turn on selection mode & show selection state\n   */\n  enabled?: boolean;\n  /** List of currently selected elements */\n  selected: ElementSelectionContextItem[];\n  onSelect: (item: ElementSelectionContextItem, multi?: boolean) => void;\n}\n\nexport interface ElementSelectionContextItem {\n  id: string;\n}\n\nexport const ElementSelectionContext = createContext<ElementSelectionContextState | undefined>(undefined);\n\nexport interface UseElementSelectionResult {\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  onSelect?: (evt: React.PointerEvent) => void;\n}\n\nexport function useElementSelection(id: string | undefined): UseElementSelectionResult {\n  if (!id) {\n    return {};\n  }\n\n  const context = useContext(ElementSelectionContext);\n  if (!context) {\n    return {};\n  }\n\n  const isSelected = context.selected.some((item) => item.id === id);\n  const onSelect = useCallback<React.PointerEventHandler>(\n    (evt) => {\n      if (!context.enabled) {\n        return;\n      }\n\n      // To prevent this click form clearing the selection\n      evt.stopPropagation();\n\n      context.onSelect({ id }, evt.shiftKey);\n    },\n    [context, id]\n  );\n\n  return { isSelected, onSelect, isSelectable: context.enabled };\n}\n"],"names":[],"mappings":";;AAiBa,MAAA,uBAAA,GAA0B,cAAwD,SAAS;AAQjG,SAAS,oBAAoB,EAAmD,EAAA;AACrF,EAAA,IAAI,CAAC,EAAI,EAAA;AACP,IAAA,OAAO,EAAC;AAAA;AAGV,EAAM,MAAA,OAAA,GAAU,WAAW,uBAAuB,CAAA;AAClD,EAAA,IAAI,CAAC,OAAS,EAAA;AACZ,IAAA,OAAO,EAAC;AAAA;AAGV,EAAM,MAAA,UAAA,GAAa,QAAQ,QAAS,CAAA,IAAA,CAAK,CAAC,IAAS,KAAA,IAAA,CAAK,OAAO,EAAE,CAAA;AACjE,EAAA,MAAM,QAAW,GAAA,WAAA;AAAA,IACf,CAAC,GAAQ,KAAA;AACP,MAAI,IAAA,CAAC,QAAQ,OAAS,EAAA;AACpB,QAAA;AAAA;AAIF,MAAA,GAAA,CAAI,eAAgB,EAAA;AAEpB,MAAA,OAAA,CAAQ,QAAS,CAAA,EAAE,EAAG,EAAA,EAAG,IAAI,QAAQ,CAAA;AAAA,KACvC;AAAA,IACA,CAAC,SAAS,EAAE;AAAA,GACd;AAEA,EAAA,OAAO,EAAE,UAAA,EAAY,QAAU,EAAA,YAAA,EAAc,QAAQ,OAAQ,EAAA;AAC/D;;;;"}