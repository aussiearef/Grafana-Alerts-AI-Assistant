'use strict';

var semver = require('semver');
var AlertRuleEditPage = require('../models/pages/AlertRuleEditPage.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var semver__namespace = /*#__PURE__*/_interopNamespaceDefault(semver);

const alertRuleEditPage = async ({ page, selectors, grafanaVersion, request }, use, testInfo) => {
  if (semver__namespace.lt(grafanaVersion, "9.5.0")) {
    console.log(
      "Testing alert rules with plugin-e2e is only supported for Grafana 9.5.0 and later. Checkout https://grafana.com/developers/plugin-tools/e2e-test-a-plugin/test-a-data-source-plugin/annotation-queries#test-the-entire-annotation-query-execution-flow to see how to skip tests for a range of Grafana versions."
    );
  }
  const alertRuleEditPage2 = new AlertRuleEditPage.AlertRuleEditPage({ page, selectors, grafanaVersion, request, testInfo });
  await alertRuleEditPage2.goto();
  await use(alertRuleEditPage2);
};

exports.alertRuleEditPage = alertRuleEditPage;
