'use strict';

var uuid = require('uuid');
var test = require('@playwright/test');

const createDataSourceViaAPI = async (grafanaAPIClient, datasource) => {
  const { type, name } = datasource;
  const dsName = name ?? `${type}-${uuid.v4()}`;
  const existingDataSource = await grafanaAPIClient.getDataSourceByName(dsName);
  if (existingDataSource.ok()) {
    const json = await existingDataSource.json();
    await grafanaAPIClient.deleteDataSourceByUID(json.uid);
  }
  const createDsReq = await grafanaAPIClient.createDataSource(datasource, dsName);
  const text = await createDsReq.text();
  const status = createDsReq.status();
  if (status === 200) {
    return createDsReq.json().then((r) => r.datasource);
  }
  test.expect.soft(createDsReq.ok(), `Failed to create data source: ${text}`).toBeTruthy();
  return existingDataSource.json();
};
const createDataSource = async ({ grafanaAPIClient }, use) => {
  await use(async (args) => {
    return createDataSourceViaAPI(grafanaAPIClient, args);
  });
};

exports.createDataSource = createDataSource;
exports.createDataSourceViaAPI = createDataSourceViaAPI;
