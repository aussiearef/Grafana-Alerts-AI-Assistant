'use strict';

var semver = require('semver');
var GrafanaPage = require('../pages/GrafanaPage.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var semver__namespace = /*#__PURE__*/_interopNamespaceDefault(semver);

class DataSourcePicker extends GrafanaPage.GrafanaPage {
  constructor(ctx, root) {
    super(ctx);
    this.root = root;
  }
  /**
   * Sets the data source picker to the provided name
   */
  async set(name) {
    let datasourcePicker = (this.root || this.ctx.page).getByTestId(
      this.ctx.selectors.components.DataSourcePicker.inputV2
    );
    if (semver__namespace.lt(this.ctx.grafanaVersion, "10.1.0")) {
      datasourcePicker = this.getByGrafanaSelector(this.ctx.selectors.components.DataSourcePicker.container, {
        root: this.root
      }).locator("input");
    }
    await datasourcePicker.fill(name);
    await this.ctx.page.keyboard.press("ArrowDown");
    await this.ctx.page.keyboard.press("ArrowUp");
    await this.ctx.page.keyboard.press("Enter");
  }
}

exports.DataSourcePicker = DataSourcePicker;
