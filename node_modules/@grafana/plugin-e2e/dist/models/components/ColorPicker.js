'use strict';

var ComponentBase = require('./ComponentBase.js');
var semver = require('semver');
var utils = require('../utils.js');

class ColorPicker extends ComponentBase.ComponentBase {
  constructor(ctx, element) {
    super(ctx, element);
  }
  async selectOption(rgbOrHex, options) {
    await this.element.getByRole("button").click(options);
    await this.getCustomTab().click(options);
    const colorInput = this.getContainer().getByTestId("input-wrapper").getByRole("textbox");
    await colorInput.hover(options);
    await colorInput.fill(rgbOrHex, options);
  }
  getCustomTab() {
    if (semver.gte(this.ctx.grafanaVersion, "11.6.0")) {
      return this.getContainer().getByRole("tab", { name: "Custom", exact: true });
    }
    return this.getContainer().getByRole("button", { name: "Custom", exact: true });
  }
  getContainer() {
    const { grafanaVersion, page, selectors } = this.ctx;
    if (semver.gte(grafanaVersion, "11.4.1")) {
      return page.locator(utils.resolveGrafanaSelector(selectors.components.Portal.container));
    }
    if (semver.gte(grafanaVersion, "8.7.0")) {
      return page.locator("#grafana-portal-container");
    }
    return page.locator("body > div").last();
  }
}

exports.ColorPicker = ColorPicker;
