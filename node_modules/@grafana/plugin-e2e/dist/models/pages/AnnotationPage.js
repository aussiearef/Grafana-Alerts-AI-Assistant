'use strict';

var semver = require('semver');
var AnnotationEditPage = require('./AnnotationEditPage.js');
var GrafanaPage = require('./GrafanaPage.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var semver__namespace = /*#__PURE__*/_interopNamespaceDefault(semver);

class AnnotationPage extends GrafanaPage.GrafanaPage {
  constructor(ctx, dashboard) {
    super(ctx, dashboard);
    this.ctx = ctx;
    this.dashboard = dashboard;
  }
  /**
   * Navigates to the annotation list page. If a dashboard uid was not provided, it's assumed that it's a new dashboard.
   */
  async goto(options) {
    const { Dashboard, AddDashboard } = this.ctx.selectors.pages;
    let url = this.dashboard?.uid ? Dashboard.Settings.Annotations.List.url(this.dashboard.uid) : AddDashboard.Settings.Annotations.List.url;
    return super.navigate(url, options);
  }
  /**
   * Clicks the add new annotation button and returns the annotation edit page
   */
  async clickAddNew() {
    const { addAnnotationCTAV2 } = this.ctx.selectors.pages.Dashboard.Settings.Annotations.List;
    if (!this.dashboard?.uid) {
      await this.getByGrafanaSelector(addAnnotationCTAV2).click();
    } else {
      const newQueryButton = semver__namespace.gte(this.ctx.grafanaVersion, "11.0.0") ? this.getByGrafanaSelector(addAnnotationCTAV2) : this.ctx.page.getByRole("button", { name: "New query" });
      await newQueryButton.click();
    }
    const editIndex = await this.ctx.page.evaluate(() => {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get("editIndex");
    });
    return new AnnotationEditPage.AnnotationEditPage(this.ctx, { id: editIndex || "1" });
  }
}

exports.AnnotationPage = AnnotationPage;
