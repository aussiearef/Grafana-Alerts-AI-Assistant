'use strict';

var test = require('@playwright/test');
var utils = require('./utils.js');

const toHaveAlert = async (grafanaPage, severity, options) => {
  let pass = true;
  let message = `An alert of variant ${severity} to be displayed on the page`;
  try {
    const filteredAlerts = grafanaPage.getByGrafanaSelector(grafanaPage.ctx.selectors.components.Alert.alertV2(severity)).filter({
      hasText: options?.hasText,
      hasNotText: options?.hasNotText,
      has: options?.has,
      hasNot: options?.hasNot
    });
    await test.expect(filteredAlerts.first()).toBeVisible({ timeout: options?.timeout });
  } catch (err) {
    message = utils.getMessage(message, `No alert was found on the page: ${err instanceof Error ? err.toString() : ""}`);
    pass = false;
  }
  return {
    message: () => message,
    pass
  };
};

exports.toHaveAlert = toHaveAlert;
